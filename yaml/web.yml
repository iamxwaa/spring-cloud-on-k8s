apiVersion: v1
data:
  default.conf: |-
    server {
        listen       8080;
        listen  [::]:8080;
        server_name  localhost;

        #charset koi8-r;
        #access_log  /var/log/nginx/host.access.log  main;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }
kind: ConfigMap
metadata:
    name: nginx-config
    namespace: k8s-demo

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-demo-web-deployment
  namespace: k8s-demo
  labels:
    k8s.kuboard.cn/layer: web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-web-demo
  template:
    metadata:
      labels:
        app: k8s-web-demo
    spec:
      containers:
        - name: service-web
          image: 192.168.120.133:5000/service-web:0.0.2.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: nginx-config-volume
              mountPath: "/etc/nginx/conf.d/"
      volumes:
        - name: nginx-config-volume
          configMap:
            name: nginx-config

---

apiVersion: v1
kind: Service
metadata:
  name: k8s-demo-web-svc
  namespace: k8s-demo
  labels:
    name: k8s-demo-web-svc
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
      name: web
      protocol: TCP
      nodePort: 30080
  selector:
    app: k8s-web-demo